#/bin/sh

# Create repos folder.
[[ ! -d ~/repos ]] && mkdir ~/repos
cd ~/repos

# Clone repository
git clone https://github.com/examples-hfrances/HelloWebApplication.git

# Build dotnet
set DOTNET_CLI_TELEMETRY_OPTOUT=1
dotnet publish HelloWebApplication -c Release -o publish/HelloWebApplication

# Create service folder
sudo mkdir --parents /var/www/dotnet/HelloWebApplication
# Copy bin to service folder
sudo cp -R ./publish/HelloWebApplication/* /var/www/dotnet/HelloWebApplication/

# Create service file
sudo bash -c 'cat > /usr/lib/systemd/system/helloWebApplication.dotnetapi.service' << EOF

[Unit]
Description=NET Web API App HelloWebApplication

[Service]
WorkingDirectory=/var/www/dotnet/HelloWebApplication/
ExecStart=/usr/bin/dotnet /var/www/dotnet/HelloWebApplication/HelloWebApplication.dll run --urls "http://localhost:5100"
Restart=always
# Restart service after 10 seconds if the dotnet service crashes:
RestartSec=10
KillSignal=SIGINT
SyslogIdentifier=dotnet-api
User=www-data
Environment=ASPNETCORE_ENVIRONMENT=Production
Environment=ASPNETCORE_URLS=http://localhost:5100

[Install]
WantedBy=multi-user.target
EOF

# Restart daemon when some ".service" file has been changed
sudo systemctl daemon-reload
# Start service on boot
sudo systemctl enable helloWebApplication.dotnetapi.service
# Start service
sudo systemctl start helloWebApplication.dotnetapi.service
# Get service status
sudo systemctl status helloWebApplication.dotnetapi.service --no-pager
# Wait some seconds
sleep 2
# Check that service is working
pwsh -command Invoke-WebRequest 'http://localhost:5100'
echo "Error number: $?"
echo ""

# Create site. WARNING: use scape \ for $ character (example \$).
sudo bash -c 'cat > /etc/nginx/conf.d/helloWebApplication.conf' << EOF
server {
    listen        80;
    server_name   hello-web-application.example.com;
    location / {
        proxy_pass         http://localhost:5100;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade \$http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host \$host;
        proxy_cache_bypass \$http_upgrade;
        proxy_set_header   X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto \$scheme;
    }
}
EOF

# Add DNS to localhost.
sudo bash -c 'cat >> /etc/hosts' << EOF

# Auto-generated by pipelines.
127.0.1.1 hello-web-application.example.com
EOF

# Start service
sudo service nginx restart

# Get active processes
ps -ef | grep nginx

# Wait some seconds
sleep 2
# Check that service is working
pwsh -command Invoke-WebRequest 'http://hello-web-application.example.com'
echo "Error number: $?"
echo ""